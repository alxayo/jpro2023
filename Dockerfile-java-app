FROM ubuntu:20.04 AS Builder

ARG TOMCAT_VERSION="9.0.8"

ARG JDK_URL="https://aka.ms/download-jdk/microsoft-jdk-17-linux-ARCH.tar.gz"
ARG TOMCAT_URL="https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.8/bin/apache-tomcat-9.0.8.tar.gz "
ARG MAVEN_URL="https://dlcdn.apache.org/maven/maven-3/3.8.7/binaries/apache-maven-3.8.7-bin.tar.gz"

RUN DEBIAN_FRONTEND=noninteractive && \
    apt-get -qq update && \
#    apt-get -qq upgrade && \
    apt-get -qq install --no-install-recommends ca-certificates fontconfig locales apt-transport-https curl wget git binutils && \
    echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen && \
    locale-gen en_US.UTF-8

# Fix sh
RUN rm /bin/sh && ln -s /bin/bash /bin/sh

# Get JDK
RUN mkdir -p /usr/lib/jvm && \
    #wget --quiet --no-cookies ${JDK_URL} -O /jdk.tar.gz && \
    if [ $(uname -m) = "x86_64" ]; then \
        JDK_URL=${JDK_URL/ARCH/x64}; \
    else \
        JDK_URL=${JDK_URL/ARCH/aarch64}; \
    fi && \
    curl --silent -L ${JDK_URL} -o /jdk.tar.gz && \
    tar -xzf /jdk.tar.gz -C / && \
    rm /jdk.tar.gz && \
    mv /jdk-1* /usr/jdk

ENV JAVA_HOME=/usr/jdk
ENV PATH="$PATH:$JAVA_HOME/bin"

# Get Tomcat
RUN curl --silent -L ${TOMCAT_URL} -o /tmp/tomcat.tgz && \ 
    #wget --quiet --no-cookies ${TOMCAT_URL} -O /tmp/tomcat.tgz && \
    tar xzvf /tmp/tomcat.tgz -C /opt && \
    mv /opt/apache-tomcat-9.0.8 /opt/tomcat && \
    rm /tmp/tomcat.tgz && \
    rm -rf /opt/tomcat/webapps/examples && \
    rm -rf /opt/tomcat/webapps/docs && \
    rm -rf /opt/tomcat/webapps/ROOT

ENV CATALINA_HOME /opt/tomcat
ENV PATH $PATH:$CATALINA_HOME/bin

EXPOSE 8080
EXPOSE 8009

# Get Maven
RUN curl --silent -L ${MAVEN_URL} -o /tmp/maven.tgz && \
    tar xzvf /tmp/maven.tgz -C /opt && \
    mv /opt/apache-maven-3.8.7 /opt/maven && \
    rm /tmp/maven.tgz

ENV M2_HOME /opt/maven
ENV PATH $PATH:$M2_HOME/bin

#Build the application
WORKDIR /workplace
COPY azure-javaweb-app ./
RUN mvn clean package


FROM ubuntu:20.04 AS Runner
COPY --from=builder /usr/jdk /usr/jdk
COPY --from=builder /opt/tomcat /opt/tomcat
COPY --from=builder /workplace/target/azure-javaweb-app /opt/tomcat/webapps/ROOT 

ENV JAVA_HOME=/usr/jdk
ENV PATH="$PATH:$JAVA_HOME/bin"
ENV CATALINA_HOME /opt/tomcat
ENV PATH $PATH:$CATALINA_HOME/bin

EXPOSE 8080
EXPOSE 8009

CMD [ "/opt/tomcat/bin/catalina.sh", "start" ]